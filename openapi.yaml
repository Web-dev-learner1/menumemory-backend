openapi: 3.0.3
info:
  title: Menumemory Backend
  version: 0.1.0
servers:
  - url: http://localhost:8080
tags:
  - name: health
    description: Metadata about the server health
  - name: restaurant
    description: Everything about restaurants
  - name: visits
    description: Operations related to restaurant visits
paths:
  /ping:
    get:
      tags:
        - health
      summary: Check if API is alive
      description: Returns a Pong message to indicate that the backend API is live and running
      responses:
        '200':
          description: Server is alive
  /restaurants:
    get:
      tags:
        - restaurant
      summary: Get restaurants matching a search term
      description: Get restaurants matching a search term
      parameters:
        - name: search_term
          in: query
          description: The search term against which matching restaurants are returned
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  restaurants:
                    type: array
                    items:
                      type: object
                      properties:
                        Name:
                          type: string
        '400':
          description: "search_term was not sent"
  /visits/{visit_id}:
    put:
      tags:
        - visits
      summary: Update an existing visit
      description: Updates the date, time, and restaurant_id of a visit.
      parameters:
        - name: visit_id
          in: path
          required: true
          description: ID of the visit to update
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          description: ID of the user making the request
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
                time:
                  type: string
                  format: time
                restaurant_id:
                  type: integer
      responses:
        '200':
          description: "Visit updated successfully"
        '400':
          description: "Invalid request body or missing user_id"
        '403':
          description: "Unauthorized access"
